{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vickilu/Documents/GitHub/reactexpress copy/client/src/components/ListProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ProjectCard from './ProjectCard.js';\n\nconst ListProjects = () => {\n  _s();\n\n  //projects is our state, setProjects is only way to change\n  const [projects, setProjects] = useState([]); //delete\n\n  const deleteProject = async id => {\n    try {\n      const delProject = await fetch(`http://localhost:5000/api/projects/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(delProject);\n      setProjects(projects.filter(project => project.id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getProjects = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/projects\");\n      const jsonData = await response.json(); // console.log(jsonData); \n\n      setProjects(jsonData);\n    } catch (err) {\n      console.erorr(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Creator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", project.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", project.creator_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteProject(project.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      children: project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListProjects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = ListProjects;\nexport default ListProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProjects\");","map":{"version":3,"sources":["/Users/vickilu/Documents/GitHub/reactexpress copy/client/src/components/ListProjects.js"],"names":["React","useEffect","useState","ProjectCard","ListProjects","projects","setProjects","deleteProject","id","delProject","fetch","method","console","log","filter","project","err","error","message","getProjects","response","jsonData","json","erorr","map","title","creator_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC,CAFuB,CAIvB;;AACA,QAAMK,aAAa,GAAG,MAAOC,EAAP,IAAc;AAChC,QAAI;AACA,YAAMC,UAAU,GAAG,MAAMC,KAAK,CAAE,sCAAqCF,EAAG,EAA1C,EAA6C;AACvEG,QAAAA,MAAM,EAAE;AAD+D,OAA7C,CAA9B;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAH,MAAAA,WAAW,CAACD,QAAQ,CAACS,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACP,EAAR,KAAeA,EAA1C,CAAD,CAAX;AACH,KAPD,CAOE,OAAOQ,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACH;AACJ,GAXD;;AAaA,QAAMC,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,oCAAD,CAA5B;AACA,YAAMW,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB,CAFA,CAGA;;AAEAhB,MAAAA,WAAW,CAACe,QAAD,CAAX;AAEH,KAPD,CAOE,OAAOL,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACW,KAAR,CAAcP,GAAG,CAACE,OAAlB;AACH;AACJ,GAXD;;AAaAjB,EAAAA,SAAS,CAAC,MAAK;AACXkB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,8BACI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACKd,QAAQ,CAACmB,GAAT,CAAaT,OAAO,iBACjB;AAAA,kCACI;AAAA,4BAAMA,OAAO,CAACU,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAMV,OAAO,CAACW,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,yCAAK;AAAQ,cAAA,OAAO,EAAE,MAAInB,aAAa,CAACQ,OAAO,CAACP,EAAT,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASO,OAAO,CAACP,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAsBKH,QAAQ,CAACmB,GAAT,CAAaT,OAAO,iBACjB,QAAC,WAAD;AAAA,gBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,YADH,CAtBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA/DD;;GAAMX,Y;;KAAAA,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ProjectCard from './ProjectCard.js';\n\nconst ListProjects = () => {\n    //projects is our state, setProjects is only way to change\n    const [projects, setProjects] = useState([]); \n\n    //delete\n    const deleteProject = async (id) => {\n        try {\n            const delProject = await fetch(`http://localhost:5000/api/projects/${id}`, {\n                method: \"DELETE\"\n            });\n\n            console.log(delProject);\n            setProjects(projects.filter(project => project.id !== id)); \n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n    \n    const getProjects = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/api/projects\");\n            const jsonData = await response.json();\n            // console.log(jsonData); \n\n            setProjects(jsonData);\n            \n        } catch (err) {\n            console.erorr(err.message);\n        }\n    }\n\n    useEffect(()=> {\n        getProjects();\n    }, []);\n\n    return(\n        <div>\n            <h1>All Projects</h1>\n\n            <table>\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Creator</th>\n                    <th>Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                    {projects.map(project => (\n                        <tr key={project.id}>\n                            <td> {project.title}</td>\n                            <td> {project.creator_id}</td>\n                            <td> <button onClick={()=>deleteProject(project.id)}>Delete</button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {projects.map(project => (\n                <ProjectCard>{ project }</ProjectCard>\n            ))}\n        </div>\n    )\n};\n\nexport default ListProjects;"]},"metadata":{},"sourceType":"module"}