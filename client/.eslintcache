[{"/Users/vickilu/Documents/GitHub/reactexpress/client/src/index.js":"1","/Users/vickilu/Documents/GitHub/reactexpress/client/src/App.js":"2","/Users/vickilu/Documents/GitHub/reactexpress/client/src/reportWebVitals.js":"3","/Users/vickilu/Documents/GitHub/reactexpress/client/src/components/customers/customers.js":"4","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/index.js":"5","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/reportWebVitals.js":"6","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/App.js":"7","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProject.js":"8","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ListProjects.js":"9","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ProjectCard.js":"10","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Register.js":"11","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Login.js":"12","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Navbar.js":"13","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Footer.js":"14","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Hero.js":"15","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Filters.js":"16","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProjDrawerForm.js":"17","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Checkbox.js":"18","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/AuthContext.js":"19","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/firebase.js":"20","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/PrivateRoute.js":"21"},{"size":500,"mtime":1609533435679,"results":"22","hashOfConfig":"23"},{"size":607,"mtime":1609533744299,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609533435680,"results":"25","hashOfConfig":"23"},{"size":793,"mtime":1609534737550,"results":"26","hashOfConfig":"23"},{"size":500,"mtime":1609533435679,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1609533435680,"results":"29","hashOfConfig":"28"},{"size":908,"mtime":1610329749939,"results":"30","hashOfConfig":"28"},{"size":4243,"mtime":1609972918113,"results":"31","hashOfConfig":"28"},{"size":5676,"mtime":1610329683233,"results":"32","hashOfConfig":"28"},{"size":2041,"mtime":1610328504406,"results":"33","hashOfConfig":"28"},{"size":3700,"mtime":1610328504407,"results":"34","hashOfConfig":"28"},{"size":1806,"mtime":1610328504405,"results":"35","hashOfConfig":"28"},{"size":741,"mtime":1610328504406,"results":"36","hashOfConfig":"28"},{"size":1333,"mtime":1609965550139,"results":"37","hashOfConfig":"28"},{"size":751,"mtime":1609966091839,"results":"38","hashOfConfig":"28"},{"size":1973,"mtime":1610329301670,"results":"39","hashOfConfig":"28"},{"size":5744,"mtime":1610328504404,"results":"40","hashOfConfig":"28"},{"size":1902,"mtime":1610328504207,"results":"41","hashOfConfig":"28"},{"size":1089,"mtime":1610328504404,"results":"42","hashOfConfig":"28"},{"size":430,"mtime":1610328504407,"results":"43","hashOfConfig":"28"},{"size":405,"mtime":1610328504406,"results":"44","hashOfConfig":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"2yo91c",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"4ma29f",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/vickilu/Documents/GitHub/reactexpress/client/src/index.js",[],["93","94"],"/Users/vickilu/Documents/GitHub/reactexpress/client/src/App.js",[],"/Users/vickilu/Documents/GitHub/reactexpress/client/src/reportWebVitals.js",[],"/Users/vickilu/Documents/GitHub/reactexpress/client/src/components/customers/customers.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/index.js",[],["95","96"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/reportWebVitals.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/App.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProject.js",["97"],"// can delete this\n\n\n\nimport React, {useState} from 'react';\nimport { Form, Input, Select, Button} from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Option } = Select;\n\n\nconst AddProject = () => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [stage, setStage] = useState(\"\");\n    var typeArray = [];\n    var interestArray = [];\n\n    const [form] = Form.useForm();\n\n    const onReset = () => form.resetFields();\n\n    const handleChange = types => {typeArray = types}\n    const handleInterestChange = interests => {interestArray = interests}\n\n    const onSubmitForm = async () => {\n        try {\n            const t = [];\n            const i = [];\n            typeArray.forEach(type=> t.push(type.value));\n            interestArray.forEach(interest => i.push(interest.value));\n\n            const body = {\n                title: title,\n                description : description,\n                stage : stage,\n                types: t,\n                interests: i\n            }\n            \n            const response = await fetch(\"/api/projects\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n            window.location = \"/\";\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return(\n        <div>\n            <h1>Add Project</h1>\n\n            <Form form={form} name=\"control-hooks\" onFinish={onSubmitForm}>\n                <Form.Item\n                    name=\"title\"\n                    label=\"Project Title\"\n                    rules={[{required: true}]}\n                    onChange={e => setTitle(e.target.value)}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"description\"\n                    label=\"Description\"\n                    rules={[{required: true}]}\n                    onChange={e => setDescription(e.target.value)}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"stage\"\n                    label=\"Stage\"\n                    rules={[{required: true}]}\n                    onChange={e => setStage(e.target.value)}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"type\"\n                    label=\"Project Type\"\n                    rules={[{required: true}]}\n                >\n                    <Select\n                    placeholder=\"Mobile, Web, etc.\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleChange}\n                    >\n                        <Option value=\"mobile\" label=\"mobile\">Mobile (iOS, Android)</Option>\n                        <Option value=\"web\" label=\"web\">Web (Website, Web-apps)</Option>\n                        <Option value=\"game\" label=\"game\">Game</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"interests\"\n                    label=\"Interest Areas\"\n                    rules={[{required: true}]}\n                >\n                    <Select\n                    placeholder=\"Social good, Healthcare, etc...\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleInterestChange}\n                    >\n                        <Option value=\"crypto\" label=\"crypto\">Cryptocurrency</Option>\n                        <Option value=\"social\" label=\"social\">Social Good</Option>\n                        <Option value=\"health\" label=\"health\">Health</Option>\n                        <Option value=\"ai\" label=\"ai\">Artificial Intelligence</Option>\n                    </Select>\n                </Form.Item>\n        \n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                    <Button htmlType=\"button\" onClick={onReset}>Reset</Button>\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nexport default AddProject;\n",["98","99"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ListProjects.js",["100"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ProjectCard.js",["101"],"import React, {useEffect, useState} from 'react';\n\nimport { Avatar, Button, Tag } from 'antd';\nimport './projects.css';\n\nfunction ProjectCard(props) {\n    const [user, setUser] = useState([]);\n    const [interests, setInterests] = useState([]);\n\n    const getUser = async () => {\n      const response = await fetch(`/api/users/${props.projects.creator_id}`);\n      const jsonData = await response.json();\n      setUser(jsonData);\n    }\n\n    const getInterests = async () => {\n      const response = await fetch(`/api/projects/${props.projects.id}`);\n      const jsonData = await response.json();\n      setInterests(jsonData);\n    }\n\n    useEffect(()=> {\n      getUser();\n      getInterests();\n    }, []);\n\n\n    return (\n        <div className=\"card\">\n            <div style={{width: 600}}>\n              {/* title */}\n              <div className=\"proj-title\">{props.projects.title}</div>\n\n              {/* tags */}\n              <div style={{marginBottom: 36}}>\n                  {interests.map(i => <Tag color=\"#E0C8FB\" className=\"proj-tags\" key={i.interest}>{ i.interest }</Tag>)}\n              </div>\n\n              {/* description */}\n              <p>{props.projects.description}</p>\n\n              {/* user who posted */}\n              <div className=\"proj-speaker\">\n                  <Avatar style={{\n                    color: '#f56a00', backgroundColor: '#fde3cf', marginRight: \"8px\" }}>\n                      {/* {user.first_name.charAt(0)}{user.last_name.charAt(0)} */}\n                      {user.first_name}\n                  </Avatar>\n                  <div className=\"subtext\">\n                    {user.first_name} {user.last_name}, {user.role}\n                </div>\n              </div>\n            </div>\n\n            <div style={{width: 240}}>\n                {/* buttons */}\n                <div className=\"dual-buttons\">\n                    <Button>Save</Button>\n                    <Button type=\"primary\">Apply</Button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default ProjectCard;\n","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Register.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Login.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Navbar.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Footer.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Hero.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Filters.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProjDrawerForm.js",["102"],"import React, {useEffect, useState} from 'react';\nimport {useAuth} from '../AuthContext';\nimport 'antd/dist/antd.css';\nimport { Drawer, Form, Button, Col, Row, Input, Select} from 'antd';\n\nconst { Option } = Select;\n\nconst AddProjDrawerForm = () => {\n  const { currentUser } = useAuth();\n  const [user, setUser] = useState({});\n  const [visible, setVisible] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [stage, setStage] = useState('');\n  var typeArray = [];\n  var interestArray = [];\n\n  const showDrawer = () => setVisible(true);\n  const onClose = () => setVisible(false);\n\n  const handleTypeChange = types => {typeArray = types}\n  const handleInterestChange = interests => {interestArray = interests}\n\n  useEffect(()=> {\n      getCurrentUserInfo();\n  }, []);\n\n  async function getCurrentUserInfo(){\n      const response = await fetch(`api/users/${currentUser.email}`);\n      const jsonData = await response.json();\n      setUser(jsonData);\n  }\n\n  const onSubmitForm = async () => {\n    try {\n        const t = [];\n        const i = [];\n        typeArray.forEach(type=> t.push(type.value));\n        interestArray.forEach(interest => i.push(interest.value));\n\n        const body = {\n            creatorID : user.id,\n            title: title,\n            description : description,\n            stage : stage,\n            types: t,\n            interests: i\n        }\n        \n        await fetch(\"/api/projects\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n        });\n\n        window.location = \"/\";\n\n    } catch (err) {\n        console.error(err.message);\n    }\n}\n\n\n  return (\n      <>\n        <Button type=\"primary\" onClick={showDrawer}>\n            Add a Project Idea\n        </Button>\n        <Drawer\n          title=\"Create a new project\"\n          width={720}\n          onClose={onClose}\n          visible={visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button onClick={onSubmitForm} type=\"primary\">\n                Submit\n              </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\">\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                    name=\"title\"\n                    label=\"Project Title\"\n                    rules={[{required: true, message: 'Please enter a title'}]}\n                    onChange={e => setTitle(e.target.value)}\n                >\n                  <Input placeholder=\"My Awesome Project\" />\n                </Form.Item>\n              </Col>\n            </Row>\n                       \n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                    name=\"description\"\n                    label=\"Description\"\n                    rules={[{required: true, message: 'Please enter description'}]}\n                    onChange={e => setDescription(e.target.value)}\n                >\n                  <Input.TextArea rows={4} placeholder=\"Describe your project\" />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                    name=\"stage\"\n                    label=\"Stage\"\n                    rules={[{required: true, message: 'Please enter a stage'}]}\n                    onChange={e => setStage(e.target.value)}\n                >\n                  <Input placeholder=\"Early, Late, etc...\" />\n                </Form.Item>\n              </Col>\n\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"type\"\n                  label=\"Project Type\"\n                  rules={[{ required: true, message: 'Please select what type(s) of project this is' }]}\n                >\n                  <Select placeholder=\"Mobile, Web, etc...\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleTypeChange}\n                  >\n                    <Option value=\"mobile\" label=\"mobile\">Mobile (iOS, Android)</Option>\n                    <Option value=\"web\" label=\"web\">Web (Website, Web-apps)</Option>\n                    <Option value=\"hardware\" label=\"hardware\">Hardware</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                    name=\"interests\"\n                    label=\"Interest Areas\"\n                    rules={[{ required: true, message: 'Please select what interest(s) this project has' }]}\n                >\n                    <Select\n                    placeholder=\"Social, Healthcare, etc...\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleInterestChange}\n                    >\n                        <Option value=\"social\" label=\"social\">Social</Option>\n                        <Option value=\"crypto\" label=\"crypto\">Cryptocurrency</Option>\n                        <Option value=\"health\" label=\"health\">Health</Option>\n                        <Option value=\"ai\" label=\"ai\">Artificial Intelligence</Option>\n                    </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n \n          </Form>\n        </Drawer>\n      </>\n    );\n}\n\nexport default AddProjDrawerForm;","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Checkbox.js",["103","104"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/AuthContext.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/firebase.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/PrivateRoute.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":41,"column":19,"nodeType":"113","messageId":"114","endLine":41,"endColumn":27},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":71,"column":8,"nodeType":"119","endLine":71,"endColumn":10,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":25,"column":8,"nodeType":"119","endLine":25,"endColumn":10,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":26,"column":6,"nodeType":"119","endLine":26,"endColumn":8,"suggestions":"124"},{"ruleId":"111","severity":1,"message":"125","line":2,"column":18,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"126","line":7,"column":9,"nodeType":"113","messageId":"114","endLine":7,"endColumn":15},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar",["127"],["128"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Filters' and 'getRole'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has missing dependencies: 'getInterests' and 'getUser'. Either include them or remove the dependency array.",["130"],"React Hook useEffect has a missing dependency: 'getCurrentUserInfo'. Either include it or remove the dependency array.",["131"],"'Button' is defined but never used.","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [Filters, getRole]",{"range":"138","text":"139"},"Update the dependencies array to be: [getInterests, getUser]",{"range":"140","text":"141"},"Update the dependencies array to be: [getCurrentUserInfo]",{"range":"142","text":"143"},[2118,2120],"[Filters, getRole]",[700,702],"[getInterests, getUser]",[831,833],"[getCurrentUserInfo]"]