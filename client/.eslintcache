[{"/Users/vickilu/Documents/GitHub/reactexpress/client/src/index.js":"1","/Users/vickilu/Documents/GitHub/reactexpress/client/src/App.js":"2","/Users/vickilu/Documents/GitHub/reactexpress/client/src/reportWebVitals.js":"3","/Users/vickilu/Documents/GitHub/reactexpress/client/src/components/customers/customers.js":"4","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/index.js":"5","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/reportWebVitals.js":"6","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/App.js":"7","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProject.js":"8","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ListProjects.js":"9","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ProjectCard.js":"10","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Home.js":"11","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Register.js":"12","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Login.js":"13","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Navbar.js":"14","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Footer.js":"15","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Hero.js":"16","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Filters.js":"17","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProjDrawerForm.js":"18","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Checkbox.js":"19"},{"size":500,"mtime":1609533435679,"results":"20","hashOfConfig":"21"},{"size":607,"mtime":1609533744299,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1609533435680,"results":"23","hashOfConfig":"21"},{"size":793,"mtime":1609534737550,"results":"24","hashOfConfig":"21"},{"size":500,"mtime":1609533435679,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1609533435680,"results":"27","hashOfConfig":"26"},{"size":832,"mtime":1610094628954,"results":"28","hashOfConfig":"26"},{"size":4243,"mtime":1609972918113,"results":"29","hashOfConfig":"26"},{"size":4925,"mtime":1610094403932,"results":"30","hashOfConfig":"26"},{"size":2573,"mtime":1609968564118,"results":"31","hashOfConfig":"26"},{"size":2146,"mtime":1610156039073,"results":"32","hashOfConfig":"26"},{"size":3156,"mtime":1609880063737,"results":"33","hashOfConfig":"26"},{"size":942,"mtime":1609880612430,"results":"34","hashOfConfig":"26"},{"size":741,"mtime":1609965160351,"results":"35","hashOfConfig":"26"},{"size":1333,"mtime":1609965550139,"results":"36","hashOfConfig":"26"},{"size":751,"mtime":1609966091839,"results":"37","hashOfConfig":"26"},{"size":1974,"mtime":1610092177508,"results":"38","hashOfConfig":"26"},{"size":5357,"mtime":1610063151061,"results":"39","hashOfConfig":"26"},{"size":1894,"mtime":1610094555218,"results":"40","hashOfConfig":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"2yo91c",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"4ma29f",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},"/Users/vickilu/Documents/GitHub/reactexpress/client/src/index.js",[],["87","88"],"/Users/vickilu/Documents/GitHub/reactexpress/client/src/App.js",[],"/Users/vickilu/Documents/GitHub/reactexpress/client/src/reportWebVitals.js",[],"/Users/vickilu/Documents/GitHub/reactexpress/client/src/components/customers/customers.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/index.js",[],["89","90"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/reportWebVitals.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/App.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProject.js",["91"],"// can delete this\n\n\n\nimport React, {useState} from 'react';\nimport { Form, Input, Select, Button} from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Option } = Select;\n\n\nconst AddProject = () => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [stage, setStage] = useState(\"\");\n    var typeArray = [];\n    var interestArray = [];\n\n    const [form] = Form.useForm();\n\n    const onReset = () => form.resetFields();\n\n    const handleChange = types => {typeArray = types}\n    const handleInterestChange = interests => {interestArray = interests}\n\n    const onSubmitForm = async () => {\n        try {\n            const t = [];\n            const i = [];\n            typeArray.forEach(type=> t.push(type.value));\n            interestArray.forEach(interest => i.push(interest.value));\n\n            const body = {\n                title: title,\n                description : description,\n                stage : stage,\n                types: t,\n                interests: i\n            }\n            \n            const response = await fetch(\"/api/projects\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n            window.location = \"/\";\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return(\n        <div>\n            <h1>Add Project</h1>\n\n            <Form form={form} name=\"control-hooks\" onFinish={onSubmitForm}>\n                <Form.Item\n                    name=\"title\"\n                    label=\"Project Title\"\n                    rules={[{required: true}]}\n                    onChange={e => setTitle(e.target.value)}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"description\"\n                    label=\"Description\"\n                    rules={[{required: true}]}\n                    onChange={e => setDescription(e.target.value)}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"stage\"\n                    label=\"Stage\"\n                    rules={[{required: true}]}\n                    onChange={e => setStage(e.target.value)}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"type\"\n                    label=\"Project Type\"\n                    rules={[{required: true}]}\n                >\n                    <Select\n                    placeholder=\"Mobile, Web, etc.\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleChange}\n                    >\n                        <Option value=\"mobile\" label=\"mobile\">Mobile (iOS, Android)</Option>\n                        <Option value=\"web\" label=\"web\">Web (Website, Web-apps)</Option>\n                        <Option value=\"game\" label=\"game\">Game</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"interests\"\n                    label=\"Interest Areas\"\n                    rules={[{required: true}]}\n                >\n                    <Select\n                    placeholder=\"Social good, Healthcare, etc...\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleInterestChange}\n                    >\n                        <Option value=\"crypto\" label=\"crypto\">Cryptocurrency</Option>\n                        <Option value=\"social\" label=\"social\">Social Good</Option>\n                        <Option value=\"health\" label=\"health\">Health</Option>\n                        <Option value=\"ai\" label=\"ai\">Artificial Intelligence</Option>\n                    </Select>\n                </Form.Item>\n        \n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                    <Button htmlType=\"button\" onClick={onReset}>Reset</Button>\n                </Form.Item>\n            </Form>\n\n        </div>\n    );\n};\n\nexport default AddProject;\n","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ListProjects.js",["92","93","94"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/ProjectCard.js",["95"],"import React, {useEffect, useState} from 'react';\n// import Button from '@material-ui/core/Button';\n\nimport { Avatar, Button, Tag } from 'antd';\nimport './projects.css';\n\nfunction ProjectCard(props) {\n    const [user, setUser] = useState([]);\n    const [interests, setInterests] = useState([]);\n\n    const getUser = async () => {\n      const response = await fetch(`/api/users/${props.projects.creator_id}`);\n      const jsonData = await response.json();\n      setUser(jsonData);\n    }\n\n    const getInterests = async () => {\n      const response = await fetch(`/api/projects/${props.projects.id}`);\n      const jsonData = await response.json();\n      setInterests(jsonData);\n    }\n\n    useEffect(()=> {\n      getUser();\n      getInterests();\n    }, []);\n\n\n    return (\n        <div className=\"card\">\n            <div style={{width: 600}}>\n              {/* title */}\n              <div className=\"proj-title\">{props.projects.title}</div>\n\n              {/* tags */}\n              <div style={{marginBottom: 36}}>\n                  {interests.map(i => <Tag color=\"#E0C8FB\" className=\"proj-tags\" key={i.interest}>{ i.interest }</Tag>)}\n              </div>\n\n              {/* description */}\n              <p>{props.projects.description}</p>\n\n              {/* user who posted */}\n              <div className=\"proj-speaker\">\n                  <Avatar style={{\n                    color: '#f56a00', backgroundColor: '#fde3cf', marginRight: \"8px\" }}>\n                      {/* {user.first_name.charAt(0)}{user.last_name.charAt(0)} */}\n                      {user.first_name}\n                  </Avatar>\n                  <div className=\"subtext\">\n                    {user.first_name} {user.last_name}, {user.role}\n                </div>\n              </div>\n            </div>\n\n            <div style={{width: 240}}>\n                {/* buttons */}\n                <div className=\"dual-buttons\">\n                    <Button>Save</Button>\n                    <Button type=\"primary\">Apply</Button>\n                </div>\n\n                {/* team members */}\n                {/* <div style={{marginTop: 40}}>\n                    <p className=\"subheader\">Team Members</p>\n                    <div>\n                        <Avatar size=\"large\">{props.projects.title.charAt(0)}</Avatar>\n                        <Avatar size=\"large\"></Avatar>\n                        <Avatar size=\"large\"></Avatar>\n                        <Avatar size=\"large\"></Avatar>\n                    </div>\n                </div> */}\n            </div>\n        </div>\n\n    );\n}\n\nexport default ProjectCard;\n","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Home.js",["96"],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Register.js",["97"],"import React, {useState} from 'react';\n\nconst Register = () => {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [role, setRole] = useState(\"\");\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n        try {\n            const body = \n                {\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    password: password,\n                    password2: password2,\n                    role: role\n                }\n            \n            const response = await fetch(\"/api/users\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            \n            window.location.replace('/users/login'); //can't always go directly to login, what if failed?\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n    \n    return (\n        <div>\n            <h1>Register</h1>\n            <form onSubmit={onSubmitForm}>\n                <div>\n                    <input type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"First Name\" \n                    onChange={e => setFirstName(e.target.value)} required />\n                </div>\n                <div>\n                    <input type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Last Name\" \n                    onChange={e => setLastName(e.target.value)} required />\n                </div>\n                <div>\n                    <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={e => setEmail(e.target.value)}\n                    required\n                    />\n                </div>\n                <div>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={e => setPassword(e.target.value)}\n                    required\n                    />\n                </div>\n                <div>\n                    <input\n                    type=\"password\"\n                    id=\"password2\"\n                    name=\"password2\"\n                    placeholder=\"Confirm Password\"\n                    onChange={e => setPassword2(e.target.value)}\n                    required\n                    />\n                </div>\n                <div>\n                    <input type=\"text\" id=\"role\" name=\"role\" placeholder=\"Role\" \n                    onChange={e => setRole(e.target.value)}/>\n                </div>\n                <div>\n                    <input type=\"submit\" value=\"Register\" />\n                </div>\n\n                <a href=\"/users/login\">Already registered? Login here</a>\n            </form>\n\n        \n        </div>\n        \n    )\n}\n\nexport default Register;","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Login.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Navbar.js",["98"],"import React from 'react';\n\nimport { Button, Input } from 'antd';\nconst { Search } = Input;\n\nfunction Navbar() {\n  return (\n    <div className=\"App-navbar\">\n        {/* logo */}\n        <div className=\"logo\">\n          <a href=\"#\" style={{color:\"black\"}}>\n          Knit.</a>\n        </div>\n\n        {/* search */}\n        <Search\n            placeholder=\"Search\"\n            onSearch={value => console.log(value)}\n            size=\"large\"\n            style={{width: 630}}\n        />\n\n        {/* buttons */}\n        <div>\n            <Button type=\"link\">\n                Log In\n            </Button>\n            <Button type=\"primary\">\n                Sign Up\n            </Button>\n        </div>\n\n    </div>\n  );\n}\n\nexport default Navbar;\n","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Footer.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Hero.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Filters.js",[],"/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/AddProjDrawerForm.js",["99"],"import React, {useState} from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Form, Button, Col, Row, Input, Select} from 'antd';\n\nconst { Option } = Select;\n\nconst AddProjDrawerForm = () => {\n  const [visible, setVisible] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [stage, setStage] = useState('');\n  var typeArray = [];\n  var interestArray = [];\n\n  const showDrawer = () => setVisible(true);\n  const onClose = () => setVisible(false);\n\n  const handleTypeChange = types => {typeArray = types}\n  const handleInterestChange = interests => {interestArray = interests}\n\n  const onSubmitForm = async () => {\n    try {\n        const t = [];\n        const i = [];\n        typeArray.forEach(type=> t.push(type.value));\n        interestArray.forEach(interest => i.push(interest.value));\n\n        const body = {\n            title: title,\n            description : description,\n            stage : stage,\n            types: t,\n            interests: i\n        }\n        \n        const response = await fetch(\"/api/projects\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n        });\n\n        window.location = \"/\";\n\n    } catch (err) {\n        console.error(err.message);\n    }\n}\n\n\n  return (\n      <>\n        <Button type=\"primary\" onClick={showDrawer}>\n            Add a Project Idea\n        </Button>\n        <Drawer\n          title=\"Create a new project\"\n          width={720}\n          onClose={onClose}\n          visible={visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button onClick={onSubmitForm} type=\"primary\">\n                Submit\n              </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\">\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                    name=\"title\"\n                    label=\"Project Title\"\n                    rules={[{required: true, message: 'Please enter a title'}]}\n                    onChange={e => setTitle(e.target.value)}\n                >\n                  <Input placeholder=\"My Awesome Project\" />\n                </Form.Item>\n              </Col>\n            </Row>\n                       \n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                    name=\"description\"\n                    label=\"Description\"\n                    rules={[{required: true, message: 'Please enter description'}]}\n                    onChange={e => setDescription(e.target.value)}\n                >\n                  <Input.TextArea rows={4} placeholder=\"Describe your project\" />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                    name=\"stage\"\n                    label=\"Stage\"\n                    rules={[{required: true, message: 'Please enter a stage'}]}\n                    onChange={e => setStage(e.target.value)}\n                >\n                  <Input placeholder=\"Early, Late, etc...\" />\n                </Form.Item>\n              </Col>\n\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"type\"\n                  label=\"Project Type\"\n                  rules={[{ required: true, message: 'Please select what type(s) of project this is' }]}\n                >\n                  <Select placeholder=\"Mobile, Web, etc...\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleTypeChange}\n                  >\n                    <Option value=\"mobile\" label=\"mobile\">Mobile (iOS, Android)</Option>\n                    <Option value=\"web\" label=\"web\">Web (Website, Web-apps)</Option>\n                    <Option value=\"hardware\" label=\"hardware\">Hardware</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                    name=\"interests\"\n                    label=\"Interest Areas\"\n                    rules={[{ required: true, message: 'Please select what interest(s) this project has' }]}\n                >\n                    <Select\n                    placeholder=\"Social, Healthcare, etc...\"\n                    mode=\"multiple\"\n                    allowClear\n                    labelInValue\n                    onChange={handleInterestChange}\n                    >\n                        <Option value=\"social\" label=\"social\">Social</Option>\n                        <Option value=\"crypto\" label=\"crypto\">Cryptocurrency</Option>\n                        <Option value=\"health\" label=\"health\">Health</Option>\n                        <Option value=\"ai\" label=\"ai\">Artificial Intelligence</Option>\n                    </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n \n          </Form>\n        </Drawer>\n      </>\n    );\n}\n\nexport default AddProjDrawerForm;","/Users/vickilu/Documents/GitHub/knit_glimpse/client/src/components/Checkbox.js",["100","101"],"import React, {useState} from 'react';\nimport { Select, Button } from 'antd';\nimport { Checkbox, Collapse } from 'antd';\n\nconst { Panel } = Collapse\n\nconst { Option } = Select;\n\nconst interests = [\n    {\n        \"id\": 1,\n        \"name\": \"social\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"crypto\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"health\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"ai\"\n    }\n];\nconst types = [\n    {\n        \"id\": 1,\n        \"name\": \"mobile\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"web\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"hardware\"\n    }\n];\n\nfunction CheckBox(props){\n    const [checked, setChecked] = useState([]); // array ex: [1, 2, 3]\n    \n    var arr = [];\n    if (props.filterKind === 'interests'){arr = interests} \n    else if (props.filterKind === 'types'){arr = types}\n\n    const handleToggle = (v) => {\n        const currentIndex = checked.indexOf(v);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) { //not previously checked, so check it\n            newChecked.push(v);\n        } else { // already checked, so uncheck it\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n        console.log(newChecked);\n        props.handleFilters(newChecked);\n    }\n\n    const renderCheckboxList = () => arr.map( (value, index) => (\n        <React.Fragment key={index}>\n            <Checkbox\n                onChange={() => handleToggle(value.name)}\n                type=\"checkbox\"\n                checked={checked.indexOf(value.name) === -1 ? false : true}\n            />\n            <span>{value.name}</span>\n        </React.Fragment>\n    ))\n\n    return(\n        <div>\n            <Collapse defaultActiveKey={['0']} >\n                <Panel header={props.filterKind} key=\"1\">\n                    {renderCheckboxList()}\n                </Panel>\n            </Collapse>\n        </div>\n    );\n}\n\nexport default CheckBox;",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":41,"column":19,"nodeType":"110","messageId":"111","endLine":41,"endColumn":27},{"ruleId":"108","severity":1,"message":"112","line":16,"column":11,"nodeType":"110","messageId":"111","endLine":16,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":59,"column":8,"nodeType":"115","endLine":59,"endColumn":10,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":64,"column":27,"nodeType":"119","messageId":"120","endLine":64,"endColumn":29},{"ruleId":"113","severity":1,"message":"121","line":26,"column":8,"nodeType":"115","endLine":26,"endColumn":10,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"109","line":39,"column":15,"nodeType":"110","messageId":"111","endLine":39,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":24,"column":19,"nodeType":"110","messageId":"111","endLine":24,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":11,"column":11,"nodeType":"125","endLine":11,"endColumn":47},{"ruleId":"108","severity":1,"message":"109","line":36,"column":15,"nodeType":"110","messageId":"111","endLine":36,"endColumn":23},{"ruleId":"108","severity":1,"message":"126","line":2,"column":18,"nodeType":"110","messageId":"111","endLine":2,"endColumn":24},{"ruleId":"108","severity":1,"message":"127","line":7,"column":9,"nodeType":"110","messageId":"111","endLine":7,"endColumn":15},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'handleAddProject' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Filters'. Either include it or remove the dependency array.","ArrayExpression",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getInterests' and 'getUser'. Either include them or remove the dependency array.",["131"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [Filters]",{"range":"136","text":"137"},"Update the dependencies array to be: [getInterests, getUser]",{"range":"138","text":"139"},[1732,1734],"[Filters]",[750,752],"[getInterests, getUser]"]